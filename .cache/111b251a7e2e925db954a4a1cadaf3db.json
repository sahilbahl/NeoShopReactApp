{"dependencies":[{"name":"/home/sahil/neoshop/package.json","includedInParent":true,"mtime":1527995625467},{"name":"/home/sahil/node_modules/fbjs/package.json","includedInParent":true,"mtime":1502708055408},{"name":"./hyphenate","loc":{"line":15,"column":24}}],"generated":{"js":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;","map":{"mappings":[{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/fbjs/lib/hyphenateStyleName.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"../../node_modules/fbjs/lib/hyphenateStyleName.js":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;"},"lineCount":39}},"hash":"edcc1e87a925085286e0676797cd63e9","cacheData":{"env":{}}}