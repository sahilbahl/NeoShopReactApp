'use strict';

var _expect = require('expect.js');

var _expect2 = _interopRequireDefault(_expect);

var _caniuseSupport = require('caniuse-support');

var _fixtures = require('../tests/fixtures');

var _fixtures2 = _interopRequireDefault(_fixtures);

var _prefix = require('./prefix');

var _prefix2 = _interopRequireDefault(_prefix);

var _supportedValue = require('./supported-value');

var _supportedValue2 = _interopRequireDefault(_supportedValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

describe('css-vendor', function () {
  describe('.supportedValue()', function () {
    it('should not prefix a simple value', function () {
      (0, _expect2['default'])((0, _supportedValue2['default'])('display', 'none')).to.be('none');
    });

    it('should not prefix a complex value', function () {
      var value = 'rgba(255, 255, 255, 1.0)';
      (0, _expect2['default'])((0, _supportedValue2['default'])('color', value)).to.be(value);
    });

    var _getSupport = (0, _caniuseSupport.getSupport)('flexbox'),
        level = _getSupport.level,
        needPrefix = _getSupport.needPrefix;

    if (level === 'full') {
      it('should prefix if needed for flex value', function () {
        var value = needPrefix ? _prefix2['default'].css + 'flex' : 'flex';
        (0, _expect2['default'])((0, _supportedValue2['default'])('display', 'flex')).to.be(value);
      });
    } else {
      it.skip('flex is not fully supported in the current browser');
    }

    it('should return false when value is unknown', function () {
      (0, _expect2['default'])((0, _supportedValue2['default'])('display', 'xxx')).to.be(false);
    });

    it('should return false when property is "content"', function () {
      (0, _expect2['default'])((0, _supportedValue2['default'])('content', 'bar')).to.be(false);
    });

    it('known transform value prefixed', function () {
      (0, _expect2['default'])((0, _supportedValue2['default'])('transition', 'all 100ms ease, transform 200ms linear')).to.eql('all 100ms ease, ' + _fixtures2['default'].transform + ' 200ms linear');
    });

    it('should not break a complex transition value', function () {
      var value = 'margin 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms';
      (0, _expect2['default'])((0, _supportedValue2['default'])('transition', value)).to.be(value);
    });
  });
});