'use strict';

var _expect = require('expect.js');

var _expect2 = _interopRequireDefault(_expect);

var _caniuseSupport = require('caniuse-support');

var _prefix = require('./prefix');

var _prefix2 = _interopRequireDefault(_prefix);

var _supportedProperty = require('./supported-property');

var _supportedProperty2 = _interopRequireDefault(_supportedProperty);

var _fixtures = require('../tests/fixtures');

var _fixtures2 = _interopRequireDefault(_fixtures);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

describe('css-vendor', function () {
  describe('.supportedProperty()', function () {
    it('should not prefix', function () {
      (0, _expect2['default'])((0, _supportedProperty2['default'])('display')).to.be('display');
    });

    var opts = { multiple: true };

    var _loop = function _loop(property) {
      it('should prefix ' + property + ' if needed [' + _caniuseSupport.currentBrowser.id + ' ' + _caniuseSupport.currentBrowser.version + ']', function () {
        return (0, _expect2['default'])((0, _supportedProperty2['default'])(property, opts)).to.eql(_fixtures2['default'][property]);
      });
    };

    for (var property in _fixtures2['default']) {
      _loop(property);
    }

    it('should prefix writing-mode', function () {
      var isPrefixed = false;
      if (_prefix2['default'].js === 'Webkit' || _prefix2['default'].js === 'ms') {
        isPrefixed = true;
      }
      (0, _expect2['default'])((0, _supportedProperty2['default'])('writing-mode')).to.be((isPrefixed ? _prefix2['default'].css : '') + 'writing-mode');
    });

    it('should return false when property is unsupported', function () {
      (0, _expect2['default'])((0, _supportedProperty2['default'])('xxx')).to.be(false);
    });
  });
});